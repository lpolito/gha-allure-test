{
  "uid" : "30191f07acb8a207",
  "name" : "2 renders but doesn't exist",
  "fullName" : "2 renders but doesn't exist",
  "historyId" : "4b37060270e94fd95aae40b1cb901be9",
  "time" : {
    "start" : 1623350539494,
    "stop" : 1623350539522,
    "duration" : 28
  },
  "description" : "\n### Test\n```typescript\n() => {\n  (0, _react.render)(\n    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(\n      _App.default,\n      {},\n      void 0,\n      false,\n      {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 10,\n      },\n      void 0\n    )\n  );\n\n  const linkElement = _react.screen.getByText(/learn bupkis/i);\n\n  expect(linkElement).toBeInTheDocument();\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">() =&gt; {\n  (0, _react.render)(\n    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(\n      _App.default,\n      {},\n      void 0,\n      false,\n      {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 10,\n      },\n      void 0\n    )\n  );\n\n  const linkElement = _react.screen.getByText(/learn bupkis/i);\n\n  expect(linkElement).toBeInTheDocument();\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "TestingLibraryElementError",
  "statusTrace" : "Unable to find an element with the text: /learn bupkis/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\n<body>\n  <div>\n    <div\n      class=\"App\"\n    >\n      <header\n        class=\"App-header\"\n      >\n        <img\n          alt=\"logo\"\n          class=\"App-logo\"\n          src=\"logo.svg\"\n        />\n        <p>\n          Edit \n          <code>\n            src/App.js\n          </code>\n           and save to reload.\n        </p>\n        <a\n          class=\"App-link\"\n          href=\"https://reactjs.org\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  </div>\n</body>",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "src"
  }, {
    "name" : "package",
    "value" : "src"
  }, {
    "name" : "subSuite",
    "value" : "App2.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 5,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "6b2f75ed5eead559",
        "reportUrl" : "https://lpolito.github.io/gha-allure-test/27//#testresult/6b2f75ed5eead559",
        "status" : "broken",
        "statusDetails" : "TestingLibraryElementError",
        "time" : {
          "start" : 1623350238469,
          "stop" : 1623350238492,
          "duration" : 23
        }
      }, {
        "uid" : "5641cb9e9875c618",
        "reportUrl" : "https://lpolito.github.io/gha-allure-test/26//#testresult/5641cb9e9875c618",
        "status" : "broken",
        "statusDetails" : "TestingLibraryElementError",
        "time" : {
          "start" : 1622654917004,
          "stop" : 1622654917030,
          "duration" : 26
        }
      }, {
        "uid" : "930d397cdcb9e7f4",
        "reportUrl" : "https://lpolito.github.io/gha-allure-test/26//#testresult/930d397cdcb9e7f4",
        "status" : "broken",
        "statusDetails" : "TestingLibraryElementError",
        "time" : {
          "start" : 1622654665367,
          "stop" : 1622654665391,
          "duration" : 24
        }
      }, {
        "uid" : "17ccd15f67d2ffd",
        "reportUrl" : "https://lpolito.github.io/gha-allure-test/25//#testresult/17ccd15f67d2ffd",
        "status" : "broken",
        "statusDetails" : "TestingLibraryElementError",
        "time" : {
          "start" : 1622654161560,
          "stop" : 1622654161589,
          "duration" : 29
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "30191f07acb8a207.json",
  "parameterValues" : [ ]
}